#include "vex.h"
#include "paths.h"
#include "pure-pursuit.h"
std::vector<std::vector<pathPoint>> convert_to_path(std::string str)
{
    std::istringstream stream(str);
    std::string line;
    std::vector<std::vector<pathPoint>> paths;

    while (std::getline(stream, line)) {
        if (line.find("#PATH-POINTS-START Path") != std::string::npos) {
            // Start a new path for each "#PATH-POINTS-START Path"
            paths.push_back(std::vector<pathPoint>());
            continue;
        }

        std::istringstream lineStream(line);
        std::string token;

        // Skip the first two values and only consider the first two for x, y
        std::getline(lineStream, token, ','); // x
        double x = atof(token.c_str());

        std::getline(lineStream, token, ','); // y
        double y = atof(token.c_str());

        paths.back().push_back(point(x,y));
    }
    return paths;
}
const char * path_str = R"(#PATH-POINTS-START Path
29.444,-150.048,120,0
31.444,-150.039,120
33.444,-150.013,120
35.443,-149.967,120
37.442,-149.902,120
39.44,-149.817,120
41.438,-149.711,120
43.433,-149.583,120
45.428,-149.433,120
47.42,-149.259,120
49.411,-149.062,120
51.398,-148.841,120
53.383,-148.594,120
55.364,-148.323,120
57.342,-148.024,120
59.315,-147.7,120
61.284,-147.348,120
63.248,-146.967,120
65.206,-146.559,120
67.157,-146.122,120
69.102,-145.657,120
71.04,-145.162,120
72.97,-144.636,120
74.891,-144.081,120
76.804,-143.496,120
78.706,-142.88,120
80.599,-142.233,120
82.481,-141.555,120
84.351,-140.848,120
86.209,-140.108,120
88.055,-139.338,120
89.888,-138.538,120
91.707,-137.706,120
93.511,-136.844,120
95.301,-135.952,120
97.076,-135.029,120
98.131,-134.464,120,0
98.131,-134.464,0,0
#PATH-POINTS-START Path
97.509,-134.464,120,0
99.132,-133.294,120
100.734,-132.097,120
102.311,-130.868,120
103.86,-129.602,120
105.373,-128.294,120
106.846,-126.941,120
108.271,-125.538,120
109.642,-124.082,120
110.953,-122.572,120
112.198,-121.007,120
113.375,-119.39,120
114.482,-117.725,120
115.518,-116.014,120
116.488,-114.265,120
117.395,-112.483,120
118.242,-110.671,120
119.036,-108.836,120
119.783,-106.981,120
120.488,-105.109,120
121.156,-103.224,120
121.791,-101.327,120
122.398,-99.422,120
122.98,-97.508,120
123.542,-95.589,120
124.085,-93.664,120
124.612,-91.735,120
125.126,-89.802,120
125.628,-87.866,120
126.119,-85.927,120
126.602,-83.986,120
127.078,-82.044,120
127.548,-80.1,120
128.012,-78.154,120
128.472,-76.208,120
128.928,-74.261,120
129.38,-72.312,120
129.753,-70.699,120,0
129.753,-70.699,0,0
#PATH-POINTS-START Path
96.888,-23.29,120,0
95.001,-23.951,120
93.107,-24.594,120
91.207,-25.219,120
89.302,-25.827,120
87.392,-26.421,120
85.477,-26.999,120
83.559,-27.564,120
81.637,-28.117,120
79.712,-28.66,120
77.784,-29.193,120
75.854,-29.719,120
73.923,-30.238,120
71.991,-30.754,120
70.058,-31.267,120
68.125,-31.781,120
66.192,-32.296,120
64.261,-32.815,120
62.331,-33.341,120
60.404,-33.876,120
58.481,-34.424,120
56.561,-34.986,120
54.648,-35.568,120
52.741,-36.172,120
50.843,-36.802,120
48.955,-37.462,120
47.08,-38.157,120
45.22,-38.891,120
43.378,-39.671,120
41.558,-40.5,120
39.764,-41.385,120
38.002,-42.33,120
36.276,-43.341,120
34.594,-44.423,120
32.963,-45.579,120
31.39,-46.815,120
29.884,-48.13,120
28.453,-49.527,120
27.102,-51.001,120
25.84,-52.552,120
24.669,-54.173,120
23.593,-55.858,120
22.614,-57.602,120
21.73,-59.395,120
20.939,-61.232,120
20.237,-63.105,120
19.625,-65.009,120
19.093,-66.936,120
18.634,-68.883,120
18.25,-70.845,120
17.929,-72.819,120
17.67,-74.802,120
17.467,-76.792,120
17.317,-78.786,120
17.212,-80.783,120
17.156,-82.783,120
17.14,-84.782,120
17.16,-86.782,120
17.216,-88.781,120
17.39,-92.23,120,0
17.39,-92.23,0,0)";
std::vector<std::vector<pathPoint>> pathMain = convert_to_path(path_str);
std::vector<double> finSpeed = {50, 100, 0};
std::vector<double> startSpeed = {200,75,200};
//

